#
# Basic configuration options
#

# Directory where all configuration will be stored.
CONFIG=~/.jitsi-meet-cfg

# Exposed HTTP port.
HTTP_PORT=8000

# Exposed HTTPS port.
HTTPS_PORT=8443

# System time zone.
TZ=Europe/Amsterdam

# Public URL for the web service.
#PUBLIC_URL="https://meet.example.com"

# IP address of the Docker host. See the "Running on a LAN environment" section
# in the README.
#DOCKER_HOST_ADDRESS=192.168.1.1


#
# Let's Encrypt configuration
#

# Enable Let's Encrypt certificate generation.
#ENABLE_LETSENCRYPT=1

# Domain for which to generate the certificate.
#LETSENCRYPT_DOMAIN=meet.example.com

# E-Mail for receiving important account notifications (mandatory).
#LETSENCRYPT_EMAIL=alice@atlanta.net

# Domain for WebSocket connections
#PUBLIC_WSS_DOMAIN=wss.example.com

#
# Basic Jigasi configuration options (needed for SIP gateway support)
#

# SIP URI for incoming / outgoing calls.
#JIGASI_SIP_URI=test@sip2sip.info

# Password for the specified SIP account as a clear text
#JIGASI_SIP_PASSWORD=passw0rd

# SIP server (use the SIP account domain if in doubt).
#JIGASI_SIP_SERVER=sip2sip.info

# SIP server port
#JIGASI_SIP_PORT=5060

# SIP server transport
#JIGASI_SIP_TRANSPORT=UDP

#
# Authentication configuration (see README for details)
#

# Enable authentication.
#ENABLE_AUTH=1

# Enable guest access.
#ENABLE_GUESTS=1

# Start a conference with video muted
#START_WITH_VIDEO_MUTED=1

#
# Advanced configuration options (you generally don't need to change these)
#

# Enable LDAP authentication in prosody via SASL mechanism.
# Note: turn on ENABLE_AUTH for get it work.
AUTH_TYPE=ldap

###################### LDAP settings ############################
# for detail information please see Cyrus SASL saslauthd.conf man page

# LDAP url for connection.
#LDAP_URL=ldaps://ldap.domain.com/

# LDAP base DN. Can be empty
#LDAP_BASE=DC=example,DC=domain,DC=com

# LDAP user DN. Do not specify this parameter for the anonymous bind.
#LDAP_BINDDN=CN=binduser,OU=users,DC=example,DC=domain,DC=com

# LDAP user password. Do not specify this parameter for the anonymous bind.
#LDAP_BINDPW=LdapUserPassw0rd

# LDAP filter. Tokens example:
# %1-9 - if the input key is user@mail.domain.com, then %1 is com, %2 is domain and %3 is mail.
# %s - %s is replaced by the complete service string.
# %r - %r is replaced by the complete realm string.
#LDAP_FILTER=(sAMAccountName=%u)

# LDAP authentication method
#LDAP_AUTH_METHOD=bind

# LDAP version
#LDAP_VERSION=3

# LDAP TLS using
#LDAP_USE_TLS=1

# List of SSL/TLS ciphers to allow.
#LDAP_TLS_CIPHERS=SECURE256:SECURE128:!AES-128-CBC:!ARCFOUR-128:!CAMELLIA-128-CBC:!3DES-CBC:!CAMELLIA-128-CBC

# Require and verify server certificate
#LDAP_TLS_CHECK_PEER=1

#################################################################

# Internal XMPP domain.
XMPP_DOMAIN=meet.jitsi

# Internal XMPP server
XMPP_SERVER=xmpp.meet.jitsi

# Internal XMPP server URL
XMPP_BOSH_URL_BASE=http://xmpp.meet.jitsi:5280

# Internal XMPP domain for authenticated services.
XMPP_AUTH_DOMAIN=auth.meet.jitsi

# XMPP domain for the MUC.
XMPP_MUC_DOMAIN=muc.meet.jitsi

# XMPP domain for the internal MUC used for jibri, jigasi and jvb pools.
XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi

# XMPP domain for unauthenticated users.
XMPP_GUEST_DOMAIN=guest.meet.jitsi

# Custom Prosody modules for XMPP_DOMAIN (comma separated)
XMPP_MODULES=

# Custom Prosody modules for MUC component (comma separated)
XMPP_MUC_MODULES=

# Custom Prosody modules for internal MUC component (comma separated)
XMPP_INTERNAL_MUC_MODULES=

# Custom prosodule modules to load in global configuration (comma separated) | mod_statistics,mod_alert
GLOBAL_MODULES= 

# Custom configuration string with escaped newlines | foo = bar;\nkey = val;
GLOBAL_CONFIG=

# MUC for the JVB pool.
JVB_BREWERY_MUC=jvbbrewery

# XMPP user for JVB client connections.
JVB_AUTH_USER=jvb

# XMPP password for JVB client connections.
JVB_AUTH_PASSWORD=passw0rd

# STUN servers used to discover the server's public IP.
JVB_STUN_SERVERS=stun.l.google.com:19302,stun1.l.google.com:19302,stun2.l.google.com:19302

# Media port for the Jitsi Videobridge
JVB_PORT=10000

# TCP Fallback for Jitsi Videobridge for when UDP isn't available
JVB_TCP_HARVESTER_DISABLED=true
JVB_TCP_PORT=4443

# A comma separated list of APIs to enable when the JVB is started. The default is none.
# See https://github.com/jitsi/jitsi-videobridge/blob/master/doc/rest.md for more information
#JVB_ENABLE_APIS=rest,colibri

# Set Octo region
#JVB_OCTO_REGION=us-east-1

# Set UDP port for Octo usage
#JVB_OCTO_BIND_PORT=4096

# Enable jvb websockets
#JVB_WS_ENABLE=1

# internal WS port
#JVB_WS_PORT=9090

# enable tls. FIXME: add functions for create tls for internal service
# tls must be enabled, if the jvb proxied nginx
#JVB_WS_TLS=true

# To specify a specific server ID to be advertised as path of the HTTP request path
#JVB_WS_SERVER_ID=jvb2

# XMPP component password for Jicofo.
JICOFO_COMPONENT_SECRET=s3cr37

# XMPP user for Jicofo client connections. NOTE: this option doesn't currently work due to a bug.
JICOFO_AUTH_USER=focus

# XMPP password for Jicofo client connections.
JICOFO_AUTH_PASSWORD=passw0rd

# Enable the use of Octo in Jicofo. Values can be RegionBasedBridgeSelectionStrategy or SplitBridgeSelectionStrategy.
#JICOFO_BRIDGE_SELECTION_STRATEGY=RegionBasedBridgeSelectionStrategy

# Max of participants on one conference one one MUC
#JICOFO_MAX_PARTICIPANTS_PER_BRIDGE=15

# XMPP user for Jigasi MUC client connections.
JIGASI_XMPP_USER=jigasi

# XMPP password for Jigasi MUC client connections.
JIGASI_XMPP_PASSWORD=passw0rd

# MUC name for the Jigasi pool.
JIGASI_BREWERY_MUC=jigasibrewery

# Minimum port for media used by Jigasi.
JIGASI_PORT_MIN=20000

# Maximum port for media used by Jigasi.
JIGASI_PORT_MAX=20050

# Enable SDES srtp
#JIGASI_ENABLE_SDES_SRTP=1

# Keepalive method
#JIGASI_SIP_KEEP_ALIVE_METHOD=OPTIONS

# Health-check extension
#JIGASI_HEALTH_CHECK_SIP_URI=keepalive

# Health-check interval
#JIGASI_HEALTH_CHECK_INTERVAL=300000

# Enable recording
#ENABLE_RECORDING=1

# XMPP domain for the jibri recorder
XMPP_RECORDER_DOMAIN=recorder.meet.jitsi

# XMPP recorder user for Jibri client connections.
JIBRI_RECORDER_USER=recorder

# XMPP recorder password for Jibri client connections.
JIBRI_RECORDER_PASSWORD=passw0rd

# Directory for recordings inside Jibri container.
JIBRI_RECORDING_DIR=/config/recordings

# The finalizing script. Will run after recording is complete.
#JIBRI_FINALIZE_RECORDING_SCRIPT_PATH=/config/finalize.sh

# Enable upload recordings to dropbox
#JIBRI_DROPBOX_APIKEY=3v5iyto7n7az02w

# XMPP user for Jibri client connections.
JIBRI_XMPP_USER=jibri

# XMPP password for Jibri client connections.
JIBRI_XMPP_PASSWORD=passw0rd

# MUC name for the Jibri pool.
JIBRI_BREWERY_MUC=jibribrewery

# MUC connection timeout
JIBRI_PENDING_TIMEOUT=90

# When jibri gets a request to start a service for a room, the room
# jid will look like: roomName@optional.prefixes.subdomain.xmpp_domain
# We'll build the url for the call by transforming that into:
# https://xmpp_domain/subdomain/roomName
# So if there are any prefixes in the jid (like jitsi meet, which
# has its participants join a muc at conference.xmpp_domain) then
# list that prefix here so it can be stripped out to generate
# the call url correctly.
JIBRI_STRIP_DOMAIN_JID=muc

# Directory for logs inside Jibri container.
JIBRI_LOGS_DIR=/config/logs

# set only if the jibri hosted on a different host
#JIBRI_EXTERNAL_INSTANCE=1

# Enable Jigasi transcription.
#ENABLE_JIGASI_TRANSCRIBER=1

# Jigasi will recordord an audio when transcriber is on. Default false.
#JIGASI_TRANSCRIBER_RECORD_AUDIO=true

# Jigasi will send transcribed text to the chat when transcriber is on. Default false.
#JIGASI_TRANSCRIBER_SEND_TXT=true

# Jigasi post to the chat an url with transcription file. Default false.
#JIGASI_TRANSCRIBER_ADVERTISE_URL=true

# Credentials for connect to Cloud Google API from Jigasi. Path located inside the container.
# Please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol
# section "Before you begin" from 1 to 5 paragraph. Copy the key on
# the docker host to ${CONFIG}/jigasi/key.json and to enable this setting:
#GOOGLE_APPLICATION_CREDENTIALS=/config/key.json

# Disable HTTPS. This can be useful if TLS connections are going to be handled outside of this setup.
#DISABLE_HTTPS=1

# Redirects HTTP traffic to HTTPS. Only works with the standard HTTPS port (443).
#ENABLE_HTTP_REDIRECT=1

# Enable screensharing for Chrome (has been working in Chrome since version 72)
ENABLE_CHROME_SCREEN_SHARING=1

# Enable Microsoft calendar integarion. Set Azure application ID
#CALENDAR_MS_APP_ID=00000000-0000-0000-0000-000040240063

# Set etherpad-lite URL
#ETHERPAD_URL_BASE=http://etherpad:9001

# Use TURN for P2P and JVB (bridge mode) connections
#TURN_ENABLE=0

# Realm to be used for the users with long-term credentials mechanism or with TURN REST API
#TURN_REALM=realm

# Secret for connect to TURN server
#TURN_SECRET=keepthissecret

# Type of TURN(s)/STUN. Can be turn or turns.
#TURN_TYPE=turns

# Annonce FQDN/IP address of the turn server via XMPP server (XEP-0215).
# If empty or not set, variable DOCKER_HOST_ADDRESS will be used by default.
#TURN_HOST=turn.example.com

# Public IP address for an instance of turn server.
# If empty or not set, will be detected and set dynamically when a container start.
#TURN_PUBIC_IP=144.144.144.144

# TLS/TCP/UDP turn port for connection
#TURN_PORT=5349

# Transport for stun/turn connection. Can be tcp or udp.
#TURN_TRANSPORT=tcp

# RTP start port for turn/turns connections
#TURN_RTP_MIN=16000

# RTP end port for turn/turns connections
#TURN_RTP_MAX=17000

# Enable admin web access. If enabled, please set variables below.
#TURN_ADMIN_ENABLE=0

# Username for admin panel
#TURN_ADMIN_USER=admin

# Password for admin panel
#TURN_ADMIN_SECRET=changeme

# HTTP(s) port for acess to admin panel
#TURN_ADMIN_PORT=8443

# Enable lobby rooms
#ENABLE_LOBBY=1
