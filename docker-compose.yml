version: '3.7'

services:
    # Frontend
    web:
        image: jitsi/web
        restart: always
        ports:
            - '${HTTP_PORT}:80'
            - '${HTTPS_PORT}:443'
        volumes:
            - ${CONFIG}/web:/config
            - ${CONFIG}/transcripts:/usr/share/jitsi-meet/transcripts
        environment:
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - ENABLE_LETSENCRYPT
            - ENABLE_HTTP_REDIRECT
            - DISABLE_HTTPS
            - START_WITH_VIDEO_MUTED
            - CALENDAR_MS_APP_ID
            - ENABLE_RECORDING
            - JICOFO_AUTH_USER
            - JIBRI_DROPBOX_APIKEY
            - LETSENCRYPT_DOMAIN
            - LETSENCRYPT_EMAIL
            - ENABLE_CHROME_SCREEN_SHARING
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_BOSH_URL_BASE
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_RECORDER_DOMAIN
            - ENABLE_JIGASI_TRANSCRIBER
            - ETHERPAD_URL_BASE
            - TZ
            - TURN_ENABLE
        networks:
            meet.jitsi:
                aliases:
                    - ${XMPP_DOMAIN}
        healthcheck:
            test: curl -iso /dev/null -w '%{http_code}\n' http://${XMPP_SERVER}:5280/http-bind|grep 200 || kill 1
            interval: 3s
            timeout: 1s
            retries: 1
            start_period: 2s

    # XMPP server
    prosody:
        image: jitsi/prosody
        restart: always
        ports:
            - '5222:5222'
            - '5347:5347'
        volumes:
            - ${CONFIG}/prosody:/config
        environment:
            - AUTH_TYPE
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - LDAP_URL
            - LDAP_BASE
            - LDAP_BINDDN
            - LDAP_BINDPW
            - LDAP_FILTER
            - LDAP_AUTH_METHOD
            - LDAP_VERSION
            - LDAP_USE_TLS
            - LDAP_TLS_CIPHERS
            - LDAP_TLS_CHECK_PEER
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_MODULES
            - XMPP_MUC_MODULES
            - XMPP_INTERNAL_MUC_MODULES
            - XMPP_RECORDER_DOMAIN
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JVB_WS_ENABLE
            - JIGASI_XMPP_USER
            - JIGASI_XMPP_PASSWORD
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - JIBRI_XMPP_USER
            - JIBRI_XMPP_PASSWORD
            - JIBRI_RECORDER_USER
            - JIBRI_RECORDER_PASSWORD
            - ENABLE_RECORDING
            - TZ
            - TURN_ENABLE
            - TURN_SECRET
            - TURN_TYPE
            - TURN_HOST
            - TURN_PORT
            - TURN_TRANSPORT
        networks:
            meet.jitsi:
                aliases:
                    - ${XMPP_SERVER}
        healthcheck:
            test: curl -iso /dev/null -w '%{http_code}\n' http://${XMPP_SERVER}:5280/http-bind|grep 200 || kill 1
            interval: 3s
            timeout: 1s
            retries: 1
            start_period: 7s

    # Focus component
    jicofo:
        image: jitsi/jicofo
        restart: always
        volumes:
            - ${CONFIG}/jicofo:/config
        environment:
            - ENABLE_AUTH
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JICOFO_BRIDGE_SELECTION_STRATEGY
            - JICOFO_MAX_PARTICIPANTS_PER_BRIDGE
            - JVB_BREWERY_MUC
            - JIGASI_BREWERY_MUC
            - JIGASI_SIP_URI
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - TZ
        networks:
            meet.jitsi:
        healthcheck:
            test: curl -iso /dev/null -w '%{http_code}\n' http://${XMPP_SERVER}:5280/http-bind|grep 200 || kill 1
            interval: 3s
            timeout: 1s
            retries: 1
            start_period: 2s

    # Video bridge
    jvb:
        image: jitsi/jvb
        restart: always
        ports:
            - '${JVB_PORT}:${JVB_PORT}/udp'
            - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
        volumes:
            - ${CONFIG}/jvb:/config
        environment:
            - DOCKER_HOST_ADDRESS
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JVB_BREWERY_MUC
            - JVB_PORT
            - JVB_TCP_HARVESTER_DISABLED
            - JVB_TCP_PORT
            - JVB_STUN_SERVERS
            - JVB_ENABLE_APIS
            - JVB_OCTO_REGION
            - JVB_OCTO_BIND_PORT
            - JVB_WS_ENABLE
            - JVB_WS_PORT
            - JVB_WS_TLS
            - JVB_WS_SERVER_ID
            - PUBLIC_WSS_DOMAIN
            - LETSENCRYPT_DOMAIN
            - JICOFO_AUTH_USER
            - TZ
        networks:
            meet.jitsi:
        healthcheck:
            test: ( curl -sf http://jicofo:8888/about/health && curl -iso /dev/null -w '%{http_code}\n' http://${XMPP_SERVER}:5280/http-bind|grep 200 ) || kill 1
            interval: 3s
            timeout: 1s
            retries: 1
            start_period: 2s

# Custom network so all services can communicate using a FQDN
networks:
    meet.jitsi:
