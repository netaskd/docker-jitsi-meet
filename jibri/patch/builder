#!/bin/bash

REPO="https://github.com/jitsi/jibri.git"

preinit() {
  # go to patch dir
  cd ${PWD}/patch

  # check build
  [ -f ${PWD}/build/jibri_${VERSION}_all.deb ] \
  && echo "=== We already have this build ${PWD}/build/jibri_${VERSION}_all.deb" \
  && exit 0
}

# create build shell
insider() {
  apt update \
  && apt install -y git devscripts vim libxml2-utils

  export WORKSPACE=/patch/build/jibri

  # get the latest release
  [ -d ${WORKSPACE} ] && rm -rf ${WORKSPACE}
  git clone ${REPO} ${WORKSPACE}

  cd ${WORKSPACE}

  # get the commit from version string like 8.0-30-g73de52d-1
  COMMIT="$(echo ${VERSION}|awk -F\- '{print $3}'|sed 's/^g//')"

  echo "=== go to commit ${COMMIT}"
  git reset --hard ${COMMIT}

  echo "=== apply pr277"
  curl -4so ${PWD}/pr277.patch https://github.com/jitsi/jibri/commit/dcd2cee2d51ffd9e4737f79fa79fa9fe3aa422ff.patch \
  && git apply pr277.patch

  echo "=== change resolution from 720p to 1080p"
  sed -i 's/1280x720/1920x1080/' src/main/kotlin/org/jitsi/jibri/capture/ffmpeg/FfmpegCapturer.kt \
  && sed -i 's/Virtual 1280 720/Virtual 1920 1080/' resources/debian-package/etc/jitsi/jibri/xorg-video-dummy.conf \

  echo "=== change rate-factor to 22"
  sed -i 's/h264ConstantRateFactor: Int = 25/h264ConstantRateFactor: Int = 22/' src/main/kotlin/org/jitsi/jibri/capture/ffmpeg/FfmpegCapturer.kt

  echo "=== we have changes in"
  git --no-pager diff

  # comment out git push
  sed -i "s/^git push/#git push/" resources/jenkins/release.sh

  # build
  resources/jenkins/build.sh \
  && resources/jenkins/release.sh Minor \
  && touch /patch/build/docker_commit_flag \
  && sleep 10
  #; read -p "=== press any key for exit from the build container..." go
}

commiter() {
  # commit container to image for to avoid downloading packets again
  (while [ ! -f ${PWD}/build/docker_commit_flag ];do
      sleep 2
  done
  docker commit jibri-builder maven:3-jdk-8-slim-local \
  && rm -f ${PWD}/build/docker_commit_flag
  ) &
}

# docker builder
builder() {
  IMAGE=maven:3-jdk-8-slim
  if [ "$(docker images| grep 3-jdk-8-slim-local)" != "" ];then
    IMAGE=maven:3-jdk-8-slim-local
  fi
  commiter;
  docker run --rm -it \
	--name=jibri-builder \
	-v ${PWD}:/patch \
        -e VERSION=${VERSION} \
        -e JITSI_BUILD=${JITSI_BUILD} \
        ${IMAGE} /patch/builder insider \
  && echo "=== done"
}

case $1 in
  insider) insider;;
  *) preinit ; builder;;
esac

